---
- name: Обновляю репозитории
  ansible.builtin.apt:
    update_cache: true
    
- name: Настраиваю dnsmasq
  when: dnsmask_install == "y"
  block:
    - name: Устанавливаю dnsmasq
      ansible.builtin.apt:
        name:
          - dnsmasq
        state: present

    - name: Создаю конфиг dnsmasq
      ansible.builtin.template:
        src: templates/dnscache.conf
        dest: /etc/dnsmasq.d/dnscache.conf
        owner: root
        group: root
        mode: '0751'
      notify: restart dnsmasq

    - name: Создаю резолв конфиг dnsmasq
      ansible.builtin.template:
        src: templates/resolv.dnsmasq
        dest: /etc/resolv.dnsmasq
        owner: root
        group: root
        mode: '0644'
      notify: restart dnsmasq

- name: Настраиваю сеть
  when: set_network == "y"
  block:
    - name: Проверяю DNS
      ansible.builtin.shell: 'nmcli con show "{{ conn }}" | grep "IP4.DNS\[1\]"'
      register: dns_check
      changed_when: false

    - name: Запрещаю использовать IP-адреса серверов DNS, предоставляемые DHCP-сервером
      ansible.builtin.command:
        cmd: nmcli con mod "{{ conn }}" ipv4.ignore-auto-dns yes
      changed_when: false

    - name: Устанавливаю DNS IP адрес ipa серверов "127.0.0.1"
      ansible.builtin.command:
        cmd: nmcli con mod "{{ conn }}" ipv4.dns "127.0.0.1"
      when: '"127.0.0.1" not in dns_check.stdout'

    # - name: Отключаю systemd-resolved
    #   ansible.builtin.service:
    #     name: systemd-resolved
    #     state: stopped
    #     enabled: false

    # - name: Перезагружаю ПК
    #   ansible.builtin.reboot:
    #   when: '"127.0.0.1" not in dns_check.stdout'

- name: Ожидаю восстановления соединения
  ansible.builtin.wait_for_connection:

- name: Меняю имя ОС
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Устанавливаю freeipa-client
  ansible.builtin.apt:
    name:
      - freeipa-client
    state: present

- name: Добавляем контроллеры ipa и dc в hosts
  lineinfile:
    path: "/etc/hosts"
    line: "{{ item }}"
  loop:
      - "{{ ipa1_ip }} {{ ipa1_name }}"
      - "{{ ipa2_ip }} {{ ipa2_name }}"
      - "{{ dc01_ip }} {{ dc01_name }}"
      - "{{ dc02_ip }} {{ dc02_name }}"

- name: Проверяю, находится ли ПК в домене
  ansible.builtin.shell: "grep -sc {{ ipa_realm }} /etc/ipa/default.conf; exit 0"
  register: domain_check
  changed_when: false

- name: domain_check
  debug:
    msg: "{{ domain_check.stdout }}"

- name: Ввожу ПК в домен
  ansible.builtin.shell:
    cmd: ipa-client-install --principal=admin --password={{ ipa_admin_pass }} --mkhomedir --ssh-trust-dns --enable-dns-updates --no-ntp --domain={{ ipa_domain }} --server={{ ipa1_name }} --unattended
  when: '"1" not in domain_check.stdout'