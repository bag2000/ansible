---
- name: Меняю имя ОС
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Комментирую репозиторий cdrom
  ansible.builtin.replace:
    path: /etc/apt/sources.list
    regexp: '^(deb cdrom)'
    replace: '# \1'

- name: Добавляем репозитории main и extended
  ansible.builtin.template:
    src: templates/repo-astra.list
    dest: /etc/apt/sources.list.d/repo-astra.list
    owner: root
    group: root
    mode: 0644

- name: Обновляю репозитории
  ansible.builtin.apt:
    update_cache: true
  when: ansible_facts['os_family'] == 'Astra Linux'

- name: Проверяю, установлен ли пакет astra-freeipa-client
  ansible.builtin.shell: 'dpkg -s "astra-freeipa-client" | grep "Status: install ok installed" | wc -l'
  register: check_freipa_clint_package

- name: Удаляю конфликтующие службы
  when: check_freipa_clint_package.stdout != '1'
  block:    
    - name: Удаляю службу systemd-timesyncd
      ansible.builtin.apt:
        name: systemd-timesyncd
        state: absent
    - name: Удаляю службу chrony
      ansible.builtin.apt:
        name: chrony
        state: absent

- name: Устанавливаю dnsmasq, astra-freeipa-client
  ansible.builtin.apt:
    name:
      - dnsmasq
      - astra-freeipa-client
    state: present

- name: Создаю конфиг dnsmasq
  ansible.builtin.template:
    src: templates/dnscache.conf
    dest: /etc/dnsmasq.d/dnscache.conf
    owner: root
    group: root
    mode: '0751'
  notify: restart dnsmasq

- name: Создаю резолв конфиг dnsmasq
  ansible.builtin.template:
    src: templates/resolv.dnsmasq
    dest: /etc/resolv.dnsmasq
    owner: root
    group: root
    mode: '0644'
  notify: restart dnsmasq

- name: Проверяю DNS
  ansible.builtin.shell: 'nmcli con show "{{ conn }}" | grep "IP4.DNS\[1\]"'
  register: dns_check

- name: Запрещаю использовать IP-адреса серверов DNS, предоставляемые DHCP-сервером
  ansible.builtin.command:
    cmd: nmcli con mod "{{ conn }}" ipv4.ignore-auto-dns yes

- name: Устанавливаю DNS IP адрес ipa серверов "127.0.0.1"
  ansible.builtin.command:
    cmd: nmcli con mod "{{ conn }}" ipv4.dns "127.0.0.1"
  when: '"127.0.0.1" not in dns_check.stdout'

- name: Перезагружаю ПК
  ansible.builtin.reboot:
    reboot_timeout: 3600
  when: '"127.0.0.1" not in dns_check.stdout'

- name: Добавляем контроллеры ipa и dc в hosts
  lineinfile:
    path: "/etc/hosts"
    line: "{{ item }}"
  loop:
      - "{{ ipa1_ip }} {{ ipa1_name }}"
      - "{{ ipa2_ip }} {{ ipa2_name }}"
      - "{{ dc01_ip }} {{ dc01_name }}"
      - "{{ dc02_ip }} {{ dc02_name }}"

- name: Проверяю, находится ли ПК в домене
  ansible.builtin.shell: 'astra-freeipa-client -i | grep ipa.t8.corp | wc -l'
  register: domain_check

- name: Ввожу ПК в домен
  ansible.builtin.command:
    cmd: astra-freeipa-client -p {{ ipa_admin_pass }} -y
  when: '"1" not in domain_check.stdout'

- name: Обновляю sssd и krb5
  block:
    - name: Создаю конфиг sssd.conf
      ansible.builtin.template:
        src: templates/sssd.conf
        dest: /etc/sssd/sssd.conf
        owner: root
        group: root
        mode: '0600'
      register: sssd_check

    - name: Создаю конфиг krb5.conf
      ansible.builtin.template:
        src: templates/krb5.conf
        dest: /etc/krb5.conf
        owner: root
        group: root
        mode: '0644'
      register: krb5_check

- name: restart sssd
  when: sssd_check.changed == true or krb5_check.changed == true
  block:
    - name: Останавливаем службу sssd
      ansible.builtin.service:
        name: sssd
        state: stopped

    - name: Чистим кэш sssd
      ansible.builtin.command:
        cmd: rm -rf /var/lib/sss/db/*

    - name: Перезапускаю ПК
      ansible.builtin.reboot:
        reboot_timeout: 3600